#include <SPI.h>
#include <Wire.h>
#include <U8g2lib.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64 

#define OLED_RESET -1       
#define SCREEN_ADDRESS 0x3C 
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

int ref_eye_height = 40;
int ref_eye_width = 40;
int ref_space_between_eye = 10;
int ref_corner_radius = 10;
int left_eye_height = ref_eye_height;
int left_eye_width = ref_eye_width;
int left_eye_x = 32;
int left_eye_y = 32;
int right_eye_x = 32 + ref_eye_width + ref_space_between_eye;
int right_eye_y = 32;
int right_eye_height = ref_eye_height;
int right_eye_width = ref_eye_width;

const unsigned char epd_bitmap_diss [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xe0, 0xe3, 0x1f, 0x38, 0xfc, 0x80, 0x07, 0xc0, 0xff, 0x1f, 0xf0, 0xff, 0xff, 0x07, 
  0x00, 0x00, 0xf0, 0xe3, 0x1f, 0x3c, 0xfe, 0xc1, 0x03, 0xf0, 0xff, 0x7f, 0xf0, 0xff, 0xff, 0x07, 
  0x00, 0x00, 0xf0, 0xe1, 0x9f, 0x3f, 0xff, 0xf1, 0x03, 0xf8, 0xff, 0xff, 0xf0, 0xff, 0xff, 0x03, 
  0x00, 0x00, 0xf0, 0xf1, 0x80, 0x1f, 0xef, 0xf9, 0x03, 0xfc, 0xff, 0xff, 0xf0, 0xff, 0xff, 0x03, 
  0x00, 0x00, 0xf8, 0xf1, 0x80, 0x1f, 0xef, 0xf9, 0x03, 0xfe, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x03, 
  0x00, 0x00, 0xf8, 0xf1, 0x00, 0x1e, 0xe7, 0xc1, 0x03, 0xfe, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x03, 
  0x00, 0x00, 0xf8, 0xf1, 0x00, 0x1e, 0xe7, 0xc1, 0x01, 0xfe, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x03, 
  0x00, 0x00, 0xfc, 0xf1, 0x07, 0x9e, 0xe7, 0xe0, 0x01, 0xfe, 0xc3, 0xff, 0x00, 0xfe, 0x07, 0x00, 
  0x00, 0x00, 0xfc, 0xf1, 0x07, 0x9e, 0xe7, 0xe0, 0x01, 0xff, 0xc3, 0xff, 0x00, 0xfe, 0x07, 0x00, 
  0x00, 0x00, 0xdc, 0xf9, 0x07, 0x8e, 0xf7, 0xe0, 0x01, 0xff, 0xc3, 0xff, 0x00, 0xfe, 0x07, 0x00, 
  0x00, 0x00, 0xde, 0x79, 0x00, 0x8f, 0xf7, 0xe0, 0x01, 0xff, 0xc3, 0x7f, 0x00, 0xfe, 0x07, 0x00, 
  0x00, 0x00, 0xfe, 0x79, 0x00, 0x8f, 0xf3, 0xe0, 0x01, 0xff, 0xc1, 0x7f, 0x00, 0xfe, 0x03, 0x00, 
  0x00, 0x00, 0xfe, 0x79, 0x00, 0xcf, 0xf3, 0xe0, 0x00, 0xff, 0x01, 0x00, 0x00, 0xfe, 0x03, 0x00, 
  0x00, 0x00, 0xff, 0x39, 0x00, 0xcf, 0x73, 0xf0, 0x00, 0xff, 0x01, 0x00, 0x00, 0xff, 0x03, 0x00, 
  0x00, 0x00, 0xff, 0xf9, 0x03, 0xc7, 0x7f, 0xf0, 0x80, 0xff, 0x01, 0x00, 0x00, 0xff, 0x03, 0x00, 
  0x00, 0x00, 0xc7, 0xfd, 0x07, 0xc7, 0x7f, 0xf0, 0x80, 0xff, 0xf9, 0x3f, 0x00, 0xff, 0x03, 0x00, 
  0x00, 0x80, 0xc7, 0xfd, 0x87, 0x87, 0x3f, 0xf0, 0x80, 0xff, 0xfd, 0x3f, 0x00, 0xff, 0x01, 0x00, 
  0x00, 0x80, 0xc3, 0xfd, 0x03, 0x07, 0x0f, 0x70, 0x80, 0xff, 0xfc, 0x3f, 0x00, 0xff, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xfc, 0x3f, 0x00, 0xff, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xfc, 0x3f, 0x80, 0xff, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xfe, 0x3f, 0x80, 0xff, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xfe, 0x1f, 0x80, 0xff, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7f, 0xf0, 0x1f, 0x80, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7f, 0xf0, 0x1f, 0x80, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7f, 0xf8, 0x1f, 0xc0, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x7f, 0xf8, 0x1f, 0xc0, 0xff, 0x00, 0x00, 
  0x00, 0x0b, 0xc3, 0xc1, 0xe3, 0xcf, 0xe3, 0x8d, 0xe1, 0x7f, 0xf8, 0x1f, 0xc0, 0xff, 0x00, 0x00, 
  0x00, 0x8f, 0xc3, 0xe1, 0xe7, 0xe7, 0xf7, 0xcf, 0xe1, 0x7f, 0xf8, 0x0f, 0xc0, 0xff, 0x00, 0x00, 
  0x00, 0xcd, 0xe3, 0x31, 0x66, 0x60, 0xbe, 0xcd, 0xe0, 0xff, 0xff, 0x0f, 0xc0, 0x7f, 0x00, 0x00, 
  0x80, 0xef, 0xe1, 0x39, 0x60, 0x20, 0x9b, 0xed, 0xe0, 0xff, 0xff, 0x0f, 0xc0, 0x7f, 0x00, 0x00, 
  0x80, 0xa5, 0xb1, 0x1b, 0xe0, 0x87, 0x9b, 0x6d, 0xe0, 0xff, 0xff, 0x0f, 0xe0, 0x7f, 0x00, 0x00, 
  0x80, 0xb7, 0xb1, 0x9b, 0xf7, 0xc3, 0x99, 0x7d, 0xe0, 0xff, 0xff, 0x07, 0xe0, 0x7f, 0x00, 0x00, 
  0xc0, 0xff, 0xfb, 0x1b, 0x36, 0x60, 0x98, 0x3d, 0xe0, 0xff, 0xff, 0x03, 0xe0, 0x7f, 0x00, 0x00, 
  0xc0, 0x82, 0x19, 0xfb, 0xf7, 0xf3, 0xd9, 0x3c, 0xc0, 0xff, 0xff, 0x01, 0xe0, 0x3f, 0x00, 0x00, 
  0xc0, 0x83, 0x0d, 0xf3, 0xf7, 0xff, 0x73, 0x18, 0x00, 0xff, 0x7f, 0x00, 0xe0, 0x3f, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void draw_eyes(bool update = true)
{
  display.clearDisplay();
  // draw from center
  int x = int(left_eye_x - left_eye_width / 2);
  int y = int(left_eye_y - left_eye_height / 2);
  display.fillRoundRect(x, y, left_eye_width, left_eye_height, ref_corner_radius, SSD1306_WHITE);
  x = int(right_eye_x - right_eye_width / 2);
  y = int(right_eye_y - right_eye_height / 2);
  display.fillRoundRect(x, y, right_eye_width, right_eye_height, ref_corner_radius, SSD1306_WHITE);
  if (update)
  {
    display.display();
  }
}

void center_eyes(bool update = true)
{
  // move eyes to the center of the display, defined by SCREEN_WIDTH, SCREEN_HEIGHT
  left_eye_height = ref_eye_height;
  left_eye_width = ref_eye_width;
  right_eye_height = ref_eye_height;
  right_eye_width = ref_eye_width;

  left_eye_x = SCREEN_WIDTH / 2 - ref_eye_width / 2 - ref_space_between_eye / 2;
  left_eye_y = SCREEN_HEIGHT / 2;
  right_eye_x = SCREEN_WIDTH / 2 + ref_eye_width / 2 + ref_space_between_eye / 2;
  right_eye_y = SCREEN_HEIGHT / 2;

  draw_eyes(update);
}






void setup() {
  pinMode(LED_BUILTIN, OUTPUT);
}

void loop() {
  digitalWrite(LED_BUILTIN, HIGH); 
  delay(1000);                     
  digitalWrite(LED_BUILTIN, LOW);  
  delay(1000);                     
}